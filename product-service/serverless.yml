service: product-service
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1

  environment:
    ENV_STAGE: dev
    DYNAMODB_TABLE_PRODUCTS: 'products'
    DYNAMODB_TABLE_STOCKS: 'stocks'
    SQS_QUEUE_NAME: CatalogItemsQueue

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_PRODUCTS}
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_STOCKS}

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true

functions:
  getProductsList:
    handler: handler.getProductsList
    memorySize: 128
    events:
      - http:
          path: /products
          method: get
          cors: true

  getProductsById:
    handler: handler.getProductsById
    memorySize: 128
    events:
      - http:
          path: /products/{productId}
          method: get
          cors: true

  createProduct:
    handler: handler.createProduct
    memorySize: 128
    events:
      - http:
          path: /products
          method: post
          cors: true

  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    memorySize: 128
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - ${self:provider.environment.SQS_QUEUE_NAME}
              - Arn
          enabled: true
          batchSize: 5

resources:
  Resources:
    CatalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:provider.environment.SQS_QUEUE_NAME}
        VisibilityTimeout: 30
