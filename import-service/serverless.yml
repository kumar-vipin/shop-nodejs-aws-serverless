service: import-service

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1

  environment:
    ENV_STAGE: dev
    S3_BUCKET_NAME: 'my-store-app-import-vks'
    DYNAMODB_TABLE_PRODUCTS: 'products'
    DYNAMODB_TABLE_STOCKS: 'stocks'

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:ListBucket
          Resource:
            - arn:aws:s3:::${self:provider.environment.S3_BUCKET_NAME}/*
            - arn:aws:s3:::${self:provider.environment.S3_BUCKET_NAME}

        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
          Resource:
            - arn:aws:sqs:${self:provider.region}:*:CatalogItemsQueue

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_PRODUCTS}
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_STOCKS}

plugins:
  - serverless-webpack

custom:
  awsRegion: ${self:provider.region}
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: /import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true

  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: ${self:provider.environment.S3_BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true

  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - CatalogItemsQueue
              - Arn
          enabled: true
          batchSize: 5

resources:
  Resources:
    CatalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: CatalogItemsQueue
        VisibilityTimeout: 30

